AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Resources:
  Topic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub ${AWS::StackName}-Topic
  AnalyticsQueueSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: sqs
      TopicArn: !Ref Topic
      Endpoint: !GetAtt AnalyticsQueue.Arn
      FilterPolicy:
        event:
          - signup
          - login
  MailingListQueueSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: sqs
      TopicArn: !Ref Topic
      Endpoint: !GetAtt MailingListQueue.Arn
      FilterPolicy:
        event:
          - signup
  ChatNotificationQueueSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: sqs
      TopicArn: !Ref Topic
      Endpoint: !GetAtt ChatNotificationQueue.Arn
      FilterPolicy:
        event:
          - signup
  AnalyticsQueue:
    Type: AWS::SQS::Queue
    Properties:
      MessageRetentionPeriod: 345600
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt AnalyticsDLQ.Arn
        maxReceiveCount: 3
  TopicToAnalyticsQueuePermission:
    Type: AWS::SQS::QueuePolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: sns.amazonaws.com
            Action: sqs:SendMessage
            Resource: !GetAtt AnalyticsQueue.Arn
            Condition:
              ArnEquals:
                aws:SourceArn: !Ref Topic
      Queues:
        - !Ref AnalyticsQueue
  AnalyticsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-AnalyticsFunction
      Description: !Sub
        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}
        - ResourceName: AnalyticsFunction
      CodeUri: src/AnalyticsFunction
      Handler: index.handler
      Runtime: nodejs14.x
      MemorySize: 3008
      Timeout: 30
      Tracing: Active
      Policies:
        - AWSXrayWriteOnlyAccess
      Events:
        AnalyticsQueue:
          Type: SQS
          Properties:
            Queue: !GetAtt AnalyticsQueue.Arn
            BatchSize: 1
  MailingListQueue:
    Type: AWS::SQS::Queue
    Properties:
      MessageRetentionPeriod: 345600
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt MailingListDLQ.Arn
        maxReceiveCount: 3
  TopicToMailingListQueuePermission:
    Type: AWS::SQS::QueuePolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: sns.amazonaws.com
            Action: sqs:SendMessage
            Resource: !GetAtt MailingListQueue.Arn
            Condition:
              ArnEquals:
                aws:SourceArn: !Ref Topic
      Queues:
        - !Ref MailingListQueue
  MailingListFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-MailingListFunction
      Description: !Sub
        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}
        - ResourceName: MailingListFunction
      CodeUri: src/MailingListFunction
      Handler: index.handler
      Runtime: nodejs14.x
      MemorySize: 3008
      Timeout: 30
      Tracing: Active
      Policies:
        - AWSXrayWriteOnlyAccess
      Events:
        MailingListQueue:
          Type: SQS
          Properties:
            Queue: !GetAtt MailingListQueue.Arn
            BatchSize: 1
  AnalyticsDLQ:
    Type: AWS::SQS::Queue
    Properties:
      MessageRetentionPeriod: 1209600
  MailingListDLQ:
    Type: AWS::SQS::Queue
    Properties:
      MessageRetentionPeriod: 1209600
  ChatNotificationQueue:
    Type: AWS::SQS::Queue
    Properties:
      MessageRetentionPeriod: 345600
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt ChatNotificationDLQ.Arn
        maxReceiveCount: 3
  TopicToChatNotificationQueuePermission:
    Type: AWS::SQS::QueuePolicy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: sns.amazonaws.com
            Action: sqs:SendMessage
            Resource: !GetAtt ChatNotificationQueue.Arn
            Condition:
              ArnEquals:
                aws:SourceArn: !Ref Topic
      Queues:
        - !Ref ChatNotificationQueue
  ChatNotificationFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-ChatNotificationFunctio
      Description: !Sub
        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}
        - ResourceName: ChatNotificationFunction
      CodeUri: src/ChatNotificationFunction
      Handler: index.handler
      Runtime: nodejs14.x
      MemorySize: 3008
      Timeout: 30
      Tracing: Active
      Policies:
        - AWSXrayWriteOnlyAccess
      Events:
        ChatNotificationQueue:
          Type: SQS
          Properties:
            Queue: !GetAtt ChatNotificationQueue.Arn
            BatchSize: 1
  ChatNotificationDLQ:
    Type: AWS::SQS::Queue
    Properties:
      MessageRetentionPeriod: 1209600
Parameters:
  StackTagName:
    Type: String
    Description: Stack Name
  EnvironmentTagName:
    Type: String
    Description: Environment Name
